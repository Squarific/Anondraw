function SitePlugins(gui,settings){this._gui=gui;this._network=new SitePluginsNetwork(settings.url);this.sitePluginsStore=new SitePluginsStore(this._gui,this._network)}SitePlugins.prototype.setJWT=function setJWT(token){this._network.setJWT(token)};SitePlugins.prototype.openStore=function openStore(){this.sitePluginsStore.openMainMenu()};function PARSE_JWT_SITEPLUGINSNETWORK(token){if(!token||!token.split)return{};var base64Url=token.split(".")[1];if(!base64Url.replace)return{};var base64=base64Url.replace(/-/g,"+").replace(/_/g,"/");var jsonPayload=decodeURIComponent(atob(base64).split("").map(function(c){return"%"+("00"+c.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(jsonPayload)}function SitePluginsNetwork(url){this.url=url;this._JWT}SitePluginsNetwork.prototype.setJWT=function setJWT(token){this._JWT=token;this.useruuid=PARSE_JWT_SITEPLUGINSNETWORK(token).uuid};SitePluginsNetwork.prototype.getPluginList=function getPluginList(cb){fetch(this.url+"/plugins/list").then(function(res){return res.json()}).then(function(data){cb(null,data.plugins)})};SitePluginsNetwork.prototype.getVersions=function getVersions(uuid,cb){fetch(this.url+"/versions/list/"+uuid).then(function(res){return res.json()}).then(function(data){cb(null,data.versions)})};SitePluginsNetwork.prototype.myPlugins=function myPlugins(cb){fetch(this.url+"/plugins/my-plugins",{method:"GET",headers:{"Content-Type":"application/json",Authorization:"Bearer "+this._JWT}}).then(function(res){return res.json()}).then(function(data){cb(null,data.plugins)})};SitePluginsNetwork.prototype.getVersion=function getVersion(uuid,version,cb){fetch(this.url+"/versions/retrieve/"+uuid+"/"+version).then(res=>res.json()).then(data=>{cb(null,data.version)})};SitePluginsNetwork.prototype.newPlugin=function newPlugin(dataToSend,cb){dataToSend.bearer=this._JWT;fetch(this.url+"/plugins/new",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(dataToSend)}).then(response=>response.json()).then(data=>{if(data&&data.errors){return cb(data.errors.map(el=>el.msg).join(", "))}cb(null,data)}).catch(error=>{console.log("Newplugin error",error);cb(error)})};SitePluginsNetwork.prototype.newVersion=function newVersion(uuid,dataToSend,cb){dataToSend.bearer=this._JWT;fetch(this.url+"/versions/new/"+uuid,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(dataToSend)}).then(response=>response.json()).then(data=>{if(data&&data.errors){return cb(data.errors.map(e=>e.msg).join(", "))}cb(null,data.newversion)}).catch(error=>{cb(error)})};function PluginCard(gui,network,pluginData){this._gui=gui;this._network=network;this._pluginData=pluginData}PluginCard.prototype.toDOM=function toDOM(){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode(this._pluginData.name+" by "+this._pluginData.useruuid));button.addEventListener("click",function(){const pluginWindow=new PluginWindow(this._gui,this._network,this._pluginData)}.bind(this));return button};function VersionCard(gui,network,plugindata,versionData){this._gui=gui;this._network=network;this._versionData=versionData;this._pluginData=plugindata}VersionCard.prototype.toDOM=function toDOM(){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode("v"+this._versionData.version));button.addEventListener("click",function(){const versionWindow=new VersionWindow(this._gui,this._network,this._pluginData,this._versionData)}.bind(this));return button};function MyPluginsWindow(gui,network){this._gui=gui;this._network=network;var pluginListWindow=this._gui.createWindow({title:"My plugins",close:true});var content=pluginListWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("My plugins"));this._network.myPlugins((err,list)=>{for(var k=0;k<list.length;k++){content.appendChild(new PluginCard(this._gui,this._network,list[k]).toDOM())}})}function NewPluginWindow(gui,network){this._gui=gui;this._network=network;this._pluginWindow=this._gui.createWindow({title:"New plugin",close:true});var content=this._pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("New plugin"));this._createForm(content)}NewPluginWindow.prototype._createForm=function _createForm(content){var formContainer=content.appendChild(document.createElement("div"));formContainer.className="newPluginForm";this._status=formContainer.appendChild(document.createElement("div"));this._nameInput=formContainer.appendChild(document.createElement("input"));this._nameInput.placeholder="My cool plugin";formContainer.appendChild(document.createElement("br"));formContainer.appendChild(document.createElement("br"));this._descriptionInput=formContainer.appendChild(document.createElement("textarea"));this._descriptionInput.placeholder="A good description of my plugin";var button=formContainer.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("Create new plugin"));button.addEventListener("click",this._submitData.bind(this))};NewPluginWindow.prototype._submitData=function _submitData(){const newPluginData={name:this._nameInput.value,description:this._descriptionInput.value};this._network.newPlugin(newPluginData,(err,newPlugin)=>{if(err)return this.displayError(err);const newVersionWindow=new NewVersionWindow(this._gui,this._network,{uuid:newPlugin.uuid,name:newPluginData.name,description:newPluginData.description});this._pluginWindow.parentNode.removeChild(this._pluginWindow)})};NewPluginWindow.prototype.displayError=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="sitepluginserror"};NewPluginWindow.prototype.displaySuccess=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="sitepluginssuccess"};NewPluginWindow.prototype.clearStatus=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.className=""};function NewVersionWindow(gui,network,pluginData){this._gui=gui;this._network=network;this._pluginData=pluginData;this._newVersionWindow=this._gui.createWindow({title:"Adding a new version for "+pluginData.name,close:true});var content=this._newVersionWindow.appendChild(document.createElement("div"));content.classList.add("content");content.classList.add("newversion-content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Add a new version for plugin "+pluginData.name));var helpText=content.appendChild(document.createElement("h3"));helpText.appendChild(document.createTextNode("Tip: do not use this to code, but use something like notepad++ and just paste it in here so you don't accidently lose a lot of work"));this._status=content.appendChild(document.createElement("div"));this._sourceInput=content.appendChild(document.createElement("textarea"));this._sourceInput.value=this.BASE_MOD;content.appendChild(document.createElement("br"));content.appendChild(document.createElement("br"));this._versionSelectionInput=content.appendChild(this._gui.createSelection(["Major change","Minor change","Bugfix/patch"],1));content.appendChild(document.createElement("br"));var releaseNotesTitle=content.appendChild(document.createElement("h4"));releaseNotesTitle.appendChild(document.createTextNode("Release notes"));this._releaseNotesInput=content.appendChild(document.createElement("textarea"));this._releaseNotesInput.classList.add("releasenotes");content.appendChild(document.createElement("br"));content.appendChild(this._createButton("Test plugin",function(){eval(this._sourceInput.value)}.bind(this)));content.appendChild(this._createButton("Submit plugin",function(){this._submitData()}.bind(this)))}NewVersionWindow.prototype._submitData=function _submitData(){const CHANGETYPES=["major","minor","patch"];const data={source:this._sourceInput.value,releasenotes:this._releaseNotesInput.value,changetype:CHANGETYPES[this._versionSelectionInput.selectedIndex]};this._network.newVersion(this._pluginData.uuid,data,(err,newVersion)=>{if(err)return this.displayError(err);this.displaySuccess("New version saved: v"+newVersion+". We will now review and if your plugin gets verified other users will be able to open it. For now you can find it in the 'My plugin' window.")})};NewVersionWindow.prototype.displayError=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="sitepluginserror"};NewVersionWindow.prototype.displaySuccess=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.appendChild(document.createTextNode(errorText));this._status.className="sitepluginssuccess"};NewVersionWindow.prototype.clearStatus=function displayError(errorText){while(this._status.firstChild)this._status.removeChild(this._status.firstChild);this._status.className=""};NewVersionWindow.prototype._createButton=function _createButton(text,callback){var button=document.createElement("div");button.classList="pluginstore-button";button.appendChild(document.createTextNode(text));button.addEventListener("click",callback);return button};NewVersionWindow.prototype.BASE_MOD="// Here you can write the javascript for your mod\n";NewVersionWindow.prototype.BASE_MOD+="\n";NewVersionWindow.prototype.BASE_MOD+='anondraw.collab.chat.addMessage("Yay the mod loaded successfully!");';function PluginWindow(gui,network,pluginData){this._gui=gui;this._network=network;this._pluginData=pluginData;var pluginWindow=gui.createWindow({title:"Plugin "+pluginData.name,close:true});var content=pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Plugin "+pluginData.name+" by "+pluginData.useruuid));var description=content.appendChild(document.createElement("div"));description.appendChild(document.createTextNode(pluginData.description));if(pluginData.useruuid===this._network.useruuid){content.appendChild(this._gui.createButton("Add new version",()=>{const newVersionWindow=new NewVersionWindow(this._gui,this._network,{uuid:this._pluginData.uuid,name:this._pluginData.name,description:this._pluginData.description})}))}this._addVersions(content)}PluginWindow.prototype._addVersions=function _addVersions(content){var title=content.appendChild(document.createElement("h3"));title.appendChild(document.createTextNode("Versions"));this._network.getVersions(this._pluginData.uuid,(err,versions)=>{for(var k=0;k<versions.length;k++){content.appendChild(new VersionCard(this._gui,this._network,this._pluginData,versions[k]).toDOM())}})};function SitePluginsStore(gui,network){this._gui=gui;this._network=network}SitePluginsStore.prototype.openMainMenu=function openMainMenu(){var pluginStoreWindow=this._gui.createWindow({title:"Plugin store",close:true});var content=pluginStoreWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Pluginstore"));var button=content.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("List all plugins"));button.addEventListener("click",function(){this.openPluginList()}.bind(this));var button=content.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("Add new plugin"));button.addEventListener("click",function(){const newPluginWindow=new NewPluginWindow(this._gui,this._network)}.bind(this));var button=content.appendChild(document.createElement("div"));button.classList="pluginstore-button";button.appendChild(document.createTextNode("My plugins"));button.addEventListener("click",function(){const myPluginWindow=new MyPluginsWindow(this._gui,this._network)}.bind(this))};SitePluginsStore.prototype.openPluginList=function openPluginList(){var pluginListWindow=this._gui.createWindow({title:"Plugin list",close:true});var content=pluginListWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Plugin list (verified only)"));this._network.getPluginList((err,list)=>{for(var k=0;k<list.length;k++){content.appendChild(new PluginCard(this._gui,this._network,list[k]).toDOM())}})};SitePluginsStore.prototype.openPluginWindow=function openPluginWindow(uuid){throw new Error("Not implemented");fetch("http://localhost:8755/plugins/retrieve").then(function(res){return res.json()}).then(function(data){}.bind(this));this.openPluginWindowWithData()};SitePluginsStore.prototype.openPluginWindowWithData=function openPluginWindowWithData(pluginData){const pluginWindow=new PluginWindow(this._gui,this._network,pluginData)};function VersionWindow(gui,network,pluginData,versionData){this._gui=gui;this._network=network;this._pluginData=pluginData;this._versionData=versionData;var pluginWindow=this._gui.createWindow({title:"Version v"+this._versionData.version+" of "+this._pluginData.name,close:true});var content=pluginWindow.appendChild(document.createElement("div"));content.classList.add("content");var title=content.appendChild(document.createElement("h2"));title.appendChild(document.createTextNode("Version v"+this._versionData.version));var description=content.appendChild(document.createElement("div"));description.appendChild(document.createTextNode(this._versionData.releasenotes));content.appendChild(this._gui.createButton("Run this version",()=>{this._runVersion()}))}VersionWindow.prototype._runVersion=function _runVersion(){this._network.getVersion(this._pluginData.uuid,this._versionData.version,(err,version)=>{eval(version.source)})};