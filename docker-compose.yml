version: "3.7"
services:
  # client:
  #   build:
  #     context: ../
  #     dockerfile: ./src/client/Dockerfile
  #   ports:
  #       - "4300:80"
  #   volumes:
  #     - ./src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  client-nginx-only:
    build:
      context: ./
      dockerfile: ./src/client/Dockerfile.nginx-only
    ports:
        - "4300:80"
    volumes:
      - ./src/client/dist:/usr/share/nginx/html
  realtime:
    build:
      context: ./
      dockerfile: ./src/server/realTime/Dockerfile
    ports:
      - "0.0.0.0:2556:2556"
    volumes:
      - ./src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  playerserver:
    build:
      context: ./
      dockerfile: ./src/server/playerServer/Dockerfile
    depends_on:
        - "database"
    ports:
      - "0.0.0.0:4552:4552"
      - "0.0.0.0:2552:2552"
    volumes:
      - ./src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  brightfox:
    build:
      context: ./
      dockerfile: ./src/server/brightfoxServer/Dockerfile
    depends_on:
      - "database"
    ports:
      - "0.0.0.0:6552:6552"
    volumes:
      - ./src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  loadbalancer:
    build:
      context: ./
      dockerfile: ./src/server/loadBalancer/Dockerfile
    ports:
      - "0.0.0.0:3552:3552"
    volumes:
      - ./src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  imageserver:
    build:
      context: ./
      dockerfile: ./src/server/imageServer/Dockerfile
    ports:
      - "0.0.0.0:5552:5552"
    volumes:
      - ./src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  simplerealtimebroadcast:
    build:
        context: ./
        dockerfile: ./src/server/simplerealtimebroadcast
    ports:
      - "0.0.0.0:7552:8080"
    volumes:
      - /src/common/certs:/etc/letsencrypt/live/direct.anondraw.com
  database:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: yQ25*IwPYS*7
      MYSQL_DATABASE: anondraw
    volumes:
#      - ./data/mysql:/var/lib/mysql
      - ./data/configs:/etc/mysql/conf.d:ro
      - ./data/start:/docker-entrypoint-initdb.d
  adminer:
    image: adminer
    ports:
      - 4400:8080
